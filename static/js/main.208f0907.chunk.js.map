{"version":3,"sources":["Fire.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Fire","props","handleChange","bind","state","buildAllGraphs","DEFAULT_FORM","form","event","newForm","this","target","name","parseInt","value","setState","year","Date","getFullYear","result","i","years","push","cashFlowGraph","buildGraph","calculateCashflow","networthGraph","calculateNetworth","builder","title","subtitle","text","subtext","left","xAxis","type","data","buildxaxis","yAxis","axisLabel","formatter","tooltip","trigger","series","smooth","emphasis","focus","investmentGain","investmentFunds","funds","yearlySpending","spending","mortgage","yearlyContribution","salary","INVEST_YOY","TAX","cashFlow","Math","round","houseFunds","hvalue","totalMortgage","YEARS","HOUSE_YOY","label","defaultValue","Col","Form","Group","Label","Control","Range","Container","option","getState","onChange","Row","addSlider","addForm","Text","className","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.208f0907.chunk.js","sourcesContent":["import React from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { Form, Container, Row, Col } from 'react-bootstrap';\nimport './App.css';\n\nclass Fire extends React.Component {\n  private static YEARS = 30;\n  private static INVEST_YOY = 0.06;\n  private static HOUSE_YOY = 0.035;\n  private static TAX = 0.3;\n\n  private static DEFAULT_FORM = {\n    years: 30,\n    spending: 1000,\n    mortgage: 1000,\n    salary: 5000,\n    hvalue: 470000,\n    funds: 30000\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      ...this.buildAllGraphs(Fire.DEFAULT_FORM),\n      form: Fire.DEFAULT_FORM,\n    };\n  }\n\n  handleChange(event: any) {\n    const newForm = {\n      ...(this.state as any).form,\n      [event.target.name]: parseInt(event.target.value),\n    };\n    this.setState({\n      ...this.buildAllGraphs(newForm),\n      form: newForm,\n    });\n  }\n\n  getState() {\n    return this.state as any;\n  }\n\n  buildxaxis(form: any) {\n    let year = (new Date()).getFullYear();\n    const result = [];\n    for (let i = 0; i <= form.years; ++i) {\n      result.push(year + i);\n    }\n    return result;\n  }\n\n  buildAllGraphs(form: any) {\n    return {\n      cashFlowGraph: this.buildGraph(\n        form,\n        (form) => this.calculateCashflow(form),\n        'Cash Flow Needed',\n        'Lower means closer to financial freedom'\n      ),\n      networthGraph: this.buildGraph(\n        form,\n        (form) => this.calculateNetworth(form),\n        'Net Worth',\n        ''\n      )\n    };\n  }\n\n  buildGraph(\n    form: any,\n    builder: (form: any) => any,\n    title: string,\n    subtitle: string,\n  ) {\n    const graph = {\n      title: {\n        text: title,\n        subtext: subtitle,\n        left: 'center'\n      },\n      xAxis: {\n        type: 'category',\n        data: this.buildxaxis(form)\n      },\n      yAxis: [\n        {\n          type: 'value',\n          axisLabel: {\n            formatter: (value: number) => {\n              if (value >= 1000000) {\n                return value/1000000 + 'm';\n              } else if (value >= 1000){\n                return value/1000 + 'k';\n              } else {\n                return value;\n              }\n            }\n          },\n        }\n      ],\n      tooltip: {\n        trigger: 'axis',\n      },\n      series: [\n        {\n          data: builder(form),\n          type: 'line',\n          smooth: true,\n          emphasis: {\n            focus: 'series'\n          },\n        },\n      ],\n    }\n\n    return graph;\n  }\n\n  calculateCashflow(form: any): number[] {\n    let investmentGain = 0;\n    let investmentFunds = form.funds;\n    const yearlySpending = (form.spending + form.mortgage) * 12;\n    const yearlyContribution = form.salary * 12 - yearlySpending;\n    const result = [];\n    for (let i = 0; i <= form.years; i++) {\n      investmentGain = investmentFunds * (Fire.INVEST_YOY * (1 - Fire.TAX));\n      investmentFunds += investmentGain + yearlyContribution;\n      const cashFlow = investmentGain - yearlySpending;\n      if (cashFlow <= 0) {\n        result.push(Math.round(-cashFlow));\n      }\n    }\n\n    return result;\n  }\n\n  calculateNetworth(form: any): number[] {\n    let investmentGain = 0;\n    let investmentFunds = form.funds;\n    let houseFunds = form.hvalue;\n    let totalMortgage = form.mortgage * 12 * Fire.YEARS;\n    const yearlySpending = (form.spending + form.mortgage) * 12;\n    const yearlyContribution = form.salary * 12 - yearlySpending;\n    const result = [];\n    for (let i = 0; i <= form.years; i++) {\n      investmentGain = investmentFunds * (Fire.INVEST_YOY * (1 - Fire.TAX));\n      houseFunds += houseFunds * Fire.HOUSE_YOY;\n      investmentFunds += investmentGain + yearlyContribution;\n      totalMortgage -= form.mortgage * 12;\n      result.push(Math.round(investmentFunds + houseFunds - totalMortgage));\n    }\n\n    return result;\n  }\n\n  addForm(label: string, defaultValue: any, name: string) {\n    return (\n      <Col>\n        <Form.Group>\n          <Form.Label>{label}</Form.Label>\n          <Form.Control type=\"number\" defaultValue={defaultValue} name={name}/>\n        </Form.Group>\n      </Col>\n    );\n  }\n\n  addSlider(label: string, defaultValue: any, name: string) {\n    return (\n      <Col>\n        <Form.Group>\n          <Form.Label>{label}</Form.Label>\n          <Form.Range defaultValue={defaultValue} name={name}/>\n        </Form.Group>\n      </Col>\n    );\n  }\n\n  render() {\n    return (\n      <Container>\n        <ReactECharts option={this.getState().cashFlowGraph} />\n        <ReactECharts option={this.getState().networthGraph} />\n        <Form onChange={this.handleChange}>\n          <Row>\n          {this.addSlider(`Calculate for ${this.getState().form.years} years`, Fire.DEFAULT_FORM.years, 'years')}\n          {this.addForm('Spending (per month)', Fire.DEFAULT_FORM.spending, 'spending')}\n          </Row>\n          <Row>\n          {this.addForm('Mortgage (per month)', Fire.DEFAULT_FORM.mortgage, 'mortgage')}\n          {this.addForm('Salary (per month)', Fire.DEFAULT_FORM.salary, 'salary')}\n          </Row>\n          <Row>\n          {this.addForm('House Value', Fire.DEFAULT_FORM.hvalue, 'hvalue')}\n          {this.addForm('Investment Starting fund', Fire.DEFAULT_FORM.funds, 'funds')}\n          </Row>\n          <Form.Text className=\"text-muted\">\n            * Investment return YOY: 6% * House return YOY: 3.5% * Inflation not counted\n          </Form.Text>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Fire;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Fire from './Fire';\n\nfunction App() {\n  return (\n    <Fire />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}